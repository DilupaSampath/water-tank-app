{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-picker-column-internal.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, H as Host, f as getElement } from './index-a1a47f01.js';\nimport { r as raf, g as getElementRoot } from './helpers-be245865.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic-554688a5.js';\nimport { a as isPlatform, b as getIonMode } from './ionic-global-94f25d1b.js';\nimport { c as createColorClasses } from './theme-01f3f29c.js';\nimport './capacitor-59395cbd.js';\nimport './index-a5d50daf.js';\n\nconst pickerColumnInternalIosCss = \":host{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}:host::-webkit-scrollbar{display:none}:host .picker-item{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:block;width:100%;height:34px;border:0px;outline:none;background:transparent;color:inherit;font-family:var(--ion-font-family, inherit);font-size:inherit;line-height:34px;text-align:inherit;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty,:host .picker-item[disabled]{cursor:default}:host .picker-item-empty,:host(:not([disabled])) .picker-item[disabled]{scroll-snap-align:none}:host([disabled]){overflow-y:hidden}:host .picker-item[disabled]{opacity:0.4}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}\";\nconst IonPickerColumnInternalIosStyle0 = pickerColumnInternalIosCss;\n\nconst pickerColumnInternalMdCss = \":host{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}:host::-webkit-scrollbar{display:none}:host .picker-item{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:block;width:100%;height:34px;border:0px;outline:none;background:transparent;color:inherit;font-family:var(--ion-font-family, inherit);font-size:inherit;line-height:34px;text-align:inherit;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty,:host .picker-item[disabled]{cursor:default}:host .picker-item-empty,:host(:not([disabled])) .picker-item[disabled]{scroll-snap-align:none}:host([disabled]){overflow-y:hidden}:host .picker-item[disabled]{opacity:0.4}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .picker-item-active{color:var(--ion-color-base)}\";\nconst IonPickerColumnInternalMdStyle0 = pickerColumnInternalMdCss;\n\nconst PickerColumnInternal = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.isScrolling = false;\n        this.isColumnVisible = false;\n        this.canExitInputMode = true;\n        this.centerPickerItemInView = (target, smooth = true, canExitInputMode = true) => {\n            const { el, isColumnVisible } = this;\n            if (isColumnVisible) {\n                // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)\n                const top = target.offsetTop - 3 * target.clientHeight + target.clientHeight / 2;\n                if (el.scrollTop !== top) {\n                    /**\n                     * Setting this flag prevents input\n                     * mode from exiting in the picker column's\n                     * scroll callback. This is useful when the user manually\n                     * taps an item or types on the keyboard as both\n                     * of these can cause a scroll to occur.\n                     */\n                    this.canExitInputMode = canExitInputMode;\n                    el.scroll({\n                        top,\n                        left: 0,\n                        behavior: smooth ? 'smooth' : undefined,\n                    });\n                }\n            }\n        };\n        this.setPickerItemActiveState = (item, isActive) => {\n            if (isActive) {\n                item.classList.add(PICKER_ITEM_ACTIVE_CLASS);\n                item.part.add(PICKER_ITEM_ACTIVE_PART);\n            }\n            else {\n                item.classList.remove(PICKER_ITEM_ACTIVE_CLASS);\n                item.part.remove(PICKER_ITEM_ACTIVE_PART);\n            }\n        };\n        /**\n         * When ionInputModeChange is emitted, each column\n         * needs to check if it is the one being made available\n         * for text entry.\n         */\n        this.inputModeChange = (ev) => {\n            if (!this.numericInput) {\n                return;\n            }\n            const { useInputMode, inputModeColumn } = ev.detail;\n            /**\n             * If inputModeColumn is undefined then this means\n             * all numericInput columns are being selected.\n             */\n            const isColumnActive = inputModeColumn === undefined || inputModeColumn === this.el;\n            if (!useInputMode || !isColumnActive) {\n                this.setInputModeActive(false);\n                return;\n            }\n            this.setInputModeActive(true);\n        };\n        /**\n         * Setting isActive will cause a re-render.\n         * As a result, we do not want to cause the\n         * re-render mid scroll as this will cause\n         * the picker column to jump back to\n         * whatever value was selected at the\n         * start of the scroll interaction.\n         */\n        this.setInputModeActive = (state) => {\n            if (this.isScrolling) {\n                this.scrollEndCallback = () => {\n                    this.isActive = state;\n                };\n                return;\n            }\n            this.isActive = state;\n        };\n        /**\n         * When the column scrolls, the component\n         * needs to determine which item is centered\n         * in the view and will emit an ionChange with\n         * the item object.\n         */\n        this.initializeScrollListener = () => {\n            /**\n             * The haptics for the wheel picker are\n             * an iOS-only feature. As a result, they should\n             * be disabled on Android.\n             */\n            const enableHaptics = isPlatform('ios');\n            const { el } = this;\n            let timeout;\n            let activeEl = this.activeItem;\n            const scrollCallback = () => {\n                raf(() => {\n                    if (timeout) {\n                        clearTimeout(timeout);\n                        timeout = undefined;\n                    }\n                    if (!this.isScrolling) {\n                        enableHaptics && hapticSelectionStart();\n                        this.isScrolling = true;\n                    }\n                    /**\n                     * Select item in the center of the column\n                     * which is the month/year that we want to select\n                     */\n                    const bbox = el.getBoundingClientRect();\n                    const centerX = bbox.x + bbox.width / 2;\n                    const centerY = bbox.y + bbox.height / 2;\n                    const activeElement = el.shadowRoot.elementFromPoint(centerX, centerY);\n                    if (activeEl !== null) {\n                        this.setPickerItemActiveState(activeEl, false);\n                    }\n                    if (activeElement === null || activeElement.disabled) {\n                        return;\n                    }\n                    /**\n                     * If we are selecting a new value,\n                     * we need to run haptics again.\n                     */\n                    if (activeElement !== activeEl) {\n                        enableHaptics && hapticSelectionChanged();\n                        if (this.canExitInputMode) {\n                            /**\n                             * The native iOS wheel picker\n                             * only dismisses the keyboard\n                             * once the selected item has changed\n                             * as a result of a swipe\n                             * from the user. If `canExitInputMode` is\n                             * `false` then this means that the\n                             * scroll is happening as a result of\n                             * the `value` property programmatically changing\n                             * either by an application or by the user via the keyboard.\n                             */\n                            this.exitInputMode();\n                        }\n                    }\n                    activeEl = activeElement;\n                    this.setPickerItemActiveState(activeElement, true);\n                    timeout = setTimeout(() => {\n                        this.isScrolling = false;\n                        enableHaptics && hapticSelectionEnd();\n                        /**\n                         * Certain tasks (such as those that\n                         * cause re-renders) should only be done\n                         * once scrolling has finished, otherwise\n                         * flickering may occur.\n                         */\n                        const { scrollEndCallback } = this;\n                        if (scrollEndCallback) {\n                            scrollEndCallback();\n                            this.scrollEndCallback = undefined;\n                        }\n                        /**\n                         * Reset this flag as the\n                         * next scroll interaction could\n                         * be a scroll from the user. In this\n                         * case, we should exit input mode.\n                         */\n                        this.canExitInputMode = true;\n                        const dataIndex = activeElement.getAttribute('data-index');\n                        /**\n                         * If no value it is\n                         * possible we hit one of the\n                         * empty padding columns.\n                         */\n                        if (dataIndex === null) {\n                            return;\n                        }\n                        const index = parseInt(dataIndex, 10);\n                        const selectedItem = this.items[index];\n                        if (selectedItem.value !== this.value) {\n                            this.setValue(selectedItem.value);\n                        }\n                    }, 250);\n                });\n            };\n            /**\n             * Wrap this in an raf so that the scroll callback\n             * does not fire when component is initially shown.\n             */\n            raf(() => {\n                el.addEventListener('scroll', scrollCallback);\n                this.destroyScrollListener = () => {\n                    el.removeEventListener('scroll', scrollCallback);\n                };\n            });\n        };\n        /**\n         * Tells the parent picker to\n         * exit text entry mode. This is only called\n         * when the selected item changes during scroll, so\n         * we know that the user likely wants to scroll\n         * instead of type.\n         */\n        this.exitInputMode = () => {\n            const { parentEl } = this;\n            if (parentEl == null)\n                return;\n            parentEl.exitInputMode();\n            /**\n             * setInputModeActive only takes\n             * effect once scrolling stops to avoid\n             * a component re-render while scrolling.\n             * However, we want the visual active\n             * indicator to go away immediately, so\n             * we call classList.remove here.\n             */\n            this.el.classList.remove('picker-column-active');\n        };\n        this.isActive = false;\n        this.disabled = false;\n        this.items = [];\n        this.value = undefined;\n        this.color = 'primary';\n        this.numericInput = false;\n    }\n    valueChange() {\n        if (this.isColumnVisible) {\n            /**\n             * Only scroll the active item into view when the picker column\n             * is actively visible to the user.\n             */\n            this.scrollActiveItemIntoView();\n        }\n    }\n    /**\n     * Only setup scroll listeners\n     * when the picker is visible, otherwise\n     * the container will have a scroll\n     * height of 0px.\n     */\n    componentWillLoad() {\n        const visibleCallback = (entries) => {\n            /**\n             * Browsers will sometimes group multiple IO events into a single callback.\n             * As a result, we want to grab the last/most recent event in case there are multiple events.\n             */\n            const ev = entries[entries.length - 1];\n            if (ev.isIntersecting) {\n                const { activeItem, el } = this;\n                this.isColumnVisible = true;\n                /**\n                 * Because this initial call to scrollActiveItemIntoView has to fire before\n                 * the scroll listener is set up, we need to manage the active class manually.\n                 */\n                const oldActive = getElementRoot(el).querySelector(`.${PICKER_ITEM_ACTIVE_CLASS}`);\n                if (oldActive) {\n                    this.setPickerItemActiveState(oldActive, false);\n                }\n                this.scrollActiveItemIntoView();\n                if (activeItem) {\n                    this.setPickerItemActiveState(activeItem, true);\n                }\n                this.initializeScrollListener();\n            }\n            else {\n                this.isColumnVisible = false;\n                if (this.destroyScrollListener) {\n                    this.destroyScrollListener();\n                    this.destroyScrollListener = undefined;\n                }\n            }\n        };\n        new IntersectionObserver(visibleCallback, { threshold: 0.001 }).observe(this.el);\n        const parentEl = (this.parentEl = this.el.closest('ion-picker-internal'));\n        if (parentEl !== null) {\n            // TODO(FW-2832): type\n            parentEl.addEventListener('ionInputModeChange', (ev) => this.inputModeChange(ev));\n        }\n    }\n    componentDidRender() {\n        var _a;\n        const { activeItem, items, isColumnVisible, value } = this;\n        if (isColumnVisible) {\n            if (activeItem) {\n                this.scrollActiveItemIntoView();\n            }\n            else if (((_a = items[0]) === null || _a === void 0 ? void 0 : _a.value) !== value) {\n                /**\n                 * If the picker column does not have an active item and the current value\n                 * does not match the first item in the picker column, that means\n                 * the value is out of bounds. In this case, we assign the value to the\n                 * first item to match the scroll position of the column.\n                 *\n                 */\n                this.setValue(items[0].value);\n            }\n        }\n    }\n    /** @internal  */\n    async scrollActiveItemIntoView() {\n        const activeEl = this.activeItem;\n        if (activeEl) {\n            this.centerPickerItemInView(activeEl, false, false);\n        }\n    }\n    /**\n     * Sets the value prop and fires the ionChange event.\n     * This is used when we need to fire ionChange from\n     * user-generated events that cannot be caught with normal\n     * input/change event listeners.\n     * @internal\n     */\n    async setValue(value) {\n        const { items } = this;\n        this.value = value;\n        const findItem = items.find((item) => item.value === value && item.disabled !== true);\n        if (findItem) {\n            this.ionChange.emit(findItem);\n        }\n    }\n    get activeItem() {\n        // If the whole picker column is disabled, the current value should appear active\n        // If the current value item is specifically disabled, it should not appear active\n        const selector = `.picker-item[data-value=\"${this.value}\"]${this.disabled ? '' : ':not([disabled])'}`;\n        return getElementRoot(this.el).querySelector(selector);\n    }\n    render() {\n        const { items, color, disabled: pickerDisabled, isActive, numericInput } = this;\n        const mode = getIonMode(this);\n        /**\n         * exportparts is needed so ion-datetime can expose the parts\n         * from two layers of shadow nesting. If this causes problems,\n         * the attribute can be moved to datetime.tsx and set on every\n         * instance of ion-picker-column-internal there instead.\n         */\n        return (h(Host, { key: '42a034f2533d30d19f96a121eb74d5f757e1c684', exportparts: `${PICKER_ITEM_PART}, ${PICKER_ITEM_ACTIVE_PART}`, disabled: pickerDisabled, tabindex: pickerDisabled ? null : 0, class: createColorClasses(color, {\n                [mode]: true,\n                ['picker-column-active']: isActive,\n                ['picker-column-numeric-input']: numericInput,\n            }) }, h(\"div\", { key: '85efccb40c87d473c06026b8041d57b40d2369c3', class: \"picker-item picker-item-empty\", \"aria-hidden\": \"true\" }, \"\\u00A0\"), h(\"div\", { key: '9fae4dd6697f23acba18c218ba250ea77954b18d', class: \"picker-item picker-item-empty\", \"aria-hidden\": \"true\" }, \"\\u00A0\"), h(\"div\", { key: 'f117afeb204a4f6bb34a1cd0e1b786fa479d8b32', class: \"picker-item picker-item-empty\", \"aria-hidden\": \"true\" }, \"\\u00A0\"), items.map((item, index) => {\n            const isItemDisabled = pickerDisabled || item.disabled || false;\n            return (h(\"button\", { tabindex: \"-1\", class: {\n                    'picker-item': true,\n                }, \"data-value\": item.value, \"data-index\": index, onClick: (ev) => {\n                    this.centerPickerItemInView(ev.target, true);\n                }, disabled: isItemDisabled, part: PICKER_ITEM_PART }, item.text));\n        }), h(\"div\", { key: '28aa37f9ce90e88b9c3a5b2c399e3066e9f339e1', class: \"picker-item picker-item-empty\", \"aria-hidden\": \"true\" }, \"\\u00A0\"), h(\"div\", { key: 'ef4ae6bee2b17918f0c2aba9d5c720c1d95987e4', class: \"picker-item picker-item-empty\", \"aria-hidden\": \"true\" }, \"\\u00A0\"), h(\"div\", { key: '564967bc8e42a9018163850da3a967a933b3de7b', class: \"picker-item picker-item-empty\", \"aria-hidden\": \"true\" }, \"\\u00A0\")));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChange\"]\n    }; }\n};\nconst PICKER_ITEM_ACTIVE_CLASS = 'picker-item-active';\nconst PICKER_ITEM_PART = 'wheel-item';\nconst PICKER_ITEM_ACTIVE_PART = 'active';\nPickerColumnInternal.style = {\n    ios: IonPickerColumnInternalIosStyle0,\n    md: IonPickerColumnInternalMdStyle0\n};\n\nexport { PickerColumnInternal as ion_picker_column_internal };\n"],"names":["r","registerInstance","d","createEvent","h","H","Host","f","getElement","raf","g","getElementRoot","a","hapticSelectionStart","b","hapticSelectionChanged","hapticSelectionEnd","isPlatform","getIonMode","c","createColorClasses","pickerColumnInternalIosCss","IonPickerColumnInternalIosStyle0","pickerColumnInternalMdCss","IonPickerColumnInternalMdStyle0","PickerColumnInternal","constructor","hostRef","ionChange","isScrolling","isColumnVisible","canExitInputMode","centerPickerItemInView","target","smooth","el","top","offsetTop","clientHeight","scrollTop","scroll","left","behavior","undefined","setPickerItemActiveState","item","isActive","classList","add","PICKER_ITEM_ACTIVE_CLASS","part","PICKER_ITEM_ACTIVE_PART","remove","inputModeChange","ev","numericInput","useInputMode","inputModeColumn","detail","isColumnActive","setInputModeActive","state","scrollEndCallback","initializeScrollListener","enableHaptics","timeout","activeEl","activeItem","scrollCallback","clearTimeout","bbox","getBoundingClientRect","centerX","x","width","centerY","y","height","activeElement","shadowRoot","elementFromPoint","disabled","exitInputMode","setTimeout","dataIndex","getAttribute","index","parseInt","selectedItem","items","value","setValue","addEventListener","destroyScrollListener","removeEventListener","parentEl","color","valueChange","scrollActiveItemIntoView","componentWillLoad","visibleCallback","entries","length","isIntersecting","oldActive","querySelector","IntersectionObserver","threshold","observe","closest","componentDidRender","_a","findItem","find","emit","selector","render","pickerDisabled","mode","key","exportparts","PICKER_ITEM_PART","tabindex","class","map","isItemDisabled","onClick","text","watchers","style","ios","md","ion_picker_column_internal"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}