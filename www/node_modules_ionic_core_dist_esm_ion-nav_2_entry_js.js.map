{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, f as getElement, H as Host } from './index-a1a47f01.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-fe2083dc.js';\nimport { o as assert, s as shallowEqualStringMap } from './helpers-be245865.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-fae1515c.js';\nimport { b as getIonMode, c as config } from './ionic-global-94f25d1b.js';\nimport { a as attachComponent } from './framework-delegate-ed4ba327.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\n// TODO(FW-2832): types\nclass ViewController {\n    constructor(component, params) {\n        this.component = component;\n        this.params = params;\n        this.state = VIEW_STATE_NEW;\n    }\n    async init(container) {\n        this.state = VIEW_STATE_ATTACHED;\n        if (!this.element) {\n            const component = this.component;\n            this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n        }\n    }\n    /**\n     * DOM WRITE\n     */\n    _destroy() {\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n        const element = this.element;\n        if (element) {\n            if (this.delegate) {\n                this.delegate.removeViewFromDom(element.parentElement, element);\n            }\n            else {\n                element.remove();\n            }\n        }\n        this.nav = undefined;\n        this.state = VIEW_STATE_DESTROYED;\n    }\n}\nconst matches = (view, id, params) => {\n    if (!view) {\n        return false;\n    }\n    if (view.component !== id) {\n        return false;\n    }\n    return shallowEqualStringMap(view.params, params);\n};\nconst convertToView = (page, params) => {\n    if (!page) {\n        return null;\n    }\n    if (page instanceof ViewController) {\n        return page;\n    }\n    return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n    return pages\n        .map((page) => {\n        if (page instanceof ViewController) {\n            return page;\n        }\n        if ('component' in page) {\n            return convertToView(page.component, page.componentProps === null ? undefined : page.componentProps);\n        }\n        return convertToView(page, undefined);\n    })\n        .filter((v) => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;z-index:0}\";\nconst IonNavStyle0 = navCss;\n\nconst Nav = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n        this.transInstr = [];\n        this.gestureOrAnimationInProgress = false;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        this.didLoad = false;\n        this.delegate = undefined;\n        this.swipeGesture = undefined;\n        this.animated = true;\n        this.animation = undefined;\n        this.rootParams = undefined;\n        this.root = undefined;\n    }\n    swipeGestureChanged() {\n        if (this.gesture) {\n            this.gesture.enable(this.swipeGesture === true);\n        }\n    }\n    rootChanged() {\n        if (this.root === undefined) {\n            return;\n        }\n        if (this.didLoad === false) {\n            /**\n             * If the component has not loaded yet, we can skip setting up the root component.\n             * It will be called when `componentDidLoad` fires.\n             */\n            return;\n        }\n        if (!this.useRouter) {\n            if (this.root !== undefined) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    }\n    componentWillLoad() {\n        this.useRouter = document.querySelector('ion-router') !== null && this.el.closest('[no-router]') === null;\n        if (this.swipeGesture === undefined) {\n            const mode = getIonMode(this);\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    }\n    async componentDidLoad() {\n        // We want to set this flag before any watch callbacks are manually called\n        this.didLoad = true;\n        this.rootChanged();\n        this.gesture = (await import('./swipe-back-37a22d34.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n        this.swipeGestureChanged();\n    }\n    connectedCallback() {\n        this.destroyed = false;\n    }\n    disconnectedCallback() {\n        for (const view of this.views) {\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            view._destroy();\n        }\n        // Release swipe back gesture and transition.\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.transInstr.length = 0;\n        this.views.length = 0;\n        this.destroyed = true;\n    }\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    push(component, componentProps, opts, done) {\n        return this.insert(-1, component, componentProps, opts, done);\n    }\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insert(insertIndex, component, componentProps, opts, done) {\n        return this.insertPages(insertIndex, [{ component, componentProps }], opts, done);\n    }\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insertPages(insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts,\n        }, done);\n    }\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    pop(opts, done) {\n        return this.removeIndex(-1, 1, opts, done);\n    }\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popTo(indexOrViewCtrl, opts, done) {\n        const ti = {\n            removeStart: -1,\n            removeCount: -1,\n            opts,\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            ti.removeView = indexOrViewCtrl;\n            ti.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            ti.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(ti, done);\n    }\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popToRoot(opts, done) {\n        return this.removeIndex(1, -1, opts, done);\n    }\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    removeIndex(startIndex, removeCount = 1, opts, done) {\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount,\n            opts,\n        }, done);\n    }\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setRoot(component, componentProps, opts, done) {\n        return this.setPages([{ component, componentProps }], opts, done);\n    }\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setPages(views, opts, done) {\n        opts !== null && opts !== void 0 ? opts : (opts = {});\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts,\n        }, done);\n    }\n    /**\n     * Called by the router to update the view.\n     *\n     * @param id The component tag.\n     * @param params The component params.\n     * @param direction A direction hint.\n     * @param animation an AnimationBuilder.\n     *\n     * @return the status.\n     * @internal\n     */\n    setRouteId(id, params, direction, animation) {\n        const active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element,\n            });\n        }\n        let resolve;\n        const promise = new Promise((r) => (resolve = r));\n        let finish;\n        const commonOpts = {\n            updateURL: false,\n            viewIsReady: (enteringEl) => {\n                let mark;\n                const p = new Promise((r) => (mark = r));\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: async () => {\n                        mark();\n                        await finish;\n                    },\n                });\n                return p;\n            },\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            // Look for a view matching the target in the view stack.\n            const viewController = this.views.find((v) => matches(v, id, params));\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n            }\n        }\n        return promise;\n    }\n    /**\n     * Called by <ion-router> to retrieve the current component.\n     *\n     * @internal\n     */\n    async getRouteId() {\n        const active = this.getActiveSync();\n        if (active) {\n            return {\n                id: active.element.tagName,\n                params: active.params,\n                element: active.element,\n            };\n        }\n        return undefined;\n    }\n    /**\n     * Get the active view.\n     */\n    async getActive() {\n        return this.getActiveSync();\n    }\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    async getByIndex(index) {\n        return this.views[index];\n    }\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    async canGoBack(view) {\n        return this.canGoBackSync(view);\n    }\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    async getPrevious(view) {\n        return this.getPreviousSync(view);\n    }\n    getLength() {\n        return this.views.length;\n    }\n    getActiveSync() {\n        return this.views[this.views.length - 1];\n    }\n    canGoBackSync(view = this.getActiveSync()) {\n        return !!(view && this.getPreviousSync(view));\n    }\n    getPreviousSync(view = this.getActiveSync()) {\n        if (!view) {\n            return undefined;\n        }\n        const views = this.views;\n        const index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    }\n    /**\n     * Adds a navigation stack change to the queue and schedules it to run.\n     *\n     * @returns Whether the transition succeeds.\n     */\n    async queueTrns(ti, done) {\n        var _a, _b;\n        if (this.isTransitioning && ((_a = ti.opts) === null || _a === void 0 ? void 0 : _a.skipIfBusy)) {\n            return false;\n        }\n        const promise = new Promise((resolve, reject) => {\n            ti.resolve = resolve;\n            ti.reject = reject;\n        });\n        ti.done = done;\n        /**\n         * If using router, check to see if navigation hooks\n         * will allow us to perform this transition. This\n         * is required in order for hooks to work with\n         * the ion-back-button or swipe to go back.\n         */\n        if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                const canTransition = await router.canTransition();\n                if (canTransition === false) {\n                    return false;\n                }\n                if (typeof canTransition === 'string') {\n                    router.push(canTransition, ti.opts.direction || 'back');\n                    return false;\n                }\n            }\n        }\n        // Normalize empty\n        if (((_b = ti.insertViews) === null || _b === void 0 ? void 0 : _b.length) === 0) {\n            ti.insertViews = undefined;\n        }\n        // Enqueue transition instruction\n        this.transInstr.push(ti);\n        // if there isn't a transition already happening\n        // then this will kick off this transition\n        this.nextTrns();\n        return promise;\n    }\n    success(result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                const direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    }\n    failed(rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    }\n    fireError(rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    }\n    /**\n     * Consumes the next transition in the queue.\n     *\n     * @returns whether the transition is executed.\n     */\n    nextTrns() {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now, executes the next instructions.\n        const ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    }\n    /** Executes all the transition instruction from the queue. */\n    async runTransition(ti) {\n        try {\n            // set that this nav is actively transitioning\n            this.ionNavWillChange.emit();\n            this.isTransitioning = true;\n            this.prepareTI(ti);\n            const leavingView = this.getActiveSync();\n            const enteringView = this.getEnteringView(ti, leavingView);\n            if (!leavingView && !enteringView) {\n                throw new Error('no views in the stack to be removed');\n            }\n            if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n                await enteringView.init(this.el);\n            }\n            this.postViewInit(enteringView, leavingView, ti);\n            // Needs transition?\n            const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) && enteringView !== leavingView;\n            if (requiresTransition && ti.opts && leavingView) {\n                const isBackDirection = ti.opts.direction === 'back';\n                /**\n                 * If heading back, use the entering page's animation\n                 * unless otherwise specified by the developer.\n                 */\n                if (isBackDirection) {\n                    ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView === null || enteringView === void 0 ? void 0 : enteringView.animationBuilder);\n                }\n                leavingView.animationBuilder = ti.opts.animationBuilder;\n            }\n            let result;\n            if (requiresTransition) {\n                result = await this.transition(enteringView, leavingView, ti);\n            }\n            else {\n                // transition is not required, so we are already done!\n                // they're inserting/removing the views somewhere in the middle or\n                // beginning, so visually nothing needs to animate/transition\n                // resolve immediately because there's no animation that's happening\n                result = {\n                    hasCompleted: true,\n                    requiresTransition: false,\n                };\n            }\n            this.success(result, ti);\n            this.ionNavDidChange.emit();\n        }\n        catch (rejectReason) {\n            this.failed(rejectReason, ti);\n        }\n        this.isTransitioning = false;\n        this.nextTrns();\n    }\n    prepareTI(ti) {\n        var _a, _b;\n        var _c;\n        const viewsLength = this.views.length;\n        (_a = ti.opts) !== null && _a !== void 0 ? _a : (ti.opts = {});\n        (_b = (_c = ti.opts).delegate) !== null && _b !== void 0 ? _b : (_c.delegate = this.delegate);\n        if (ti.removeView !== undefined) {\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n            const index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition = ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        const insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        assert(insertViews.length > 0, 'length can not be zero');\n        const viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (const view of viewControllers) {\n            view.delegate = ti.opts.delegate;\n            const nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    }\n    /**\n     * Returns the view that will be entered considering the transition instructions.\n     *\n     * @param ti The instructions.\n     * @param leavingView The view being left or undefined if none.\n     *\n     * @returns The view that will be entered, undefined if none.\n     */\n    getEnteringView(ti, leavingView) {\n        // The last inserted view will be entered when view are inserted.\n        const insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            return insertViews[insertViews.length - 1];\n        }\n        // When views are deleted, we will enter the last view that is not removed and not the view being left.\n        const removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            const views = this.views;\n            const removeEnd = removeStart + ti.removeCount;\n            for (let i = views.length - 1; i >= 0; i--) {\n                const view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Adds and Removes the views from the navigation stack.\n     *\n     * @param enteringView The view being entered.\n     * @param leavingView The view being left.\n     * @param ti The instructions.\n     */\n    postViewInit(enteringView, leavingView, ti) {\n        var _a, _b, _c;\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        assert(ti.resolve, 'resolve must be valid');\n        assert(ti.reject, 'reject must be valid');\n        // Compute the views to remove.\n        const opts = ti.opts;\n        const { insertViews, removeStart, removeCount } = ti;\n        /** Records the view to destroy */\n        let destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            assert(removeStart >= 0, 'removeStart can not be negative');\n            assert(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (let i = removeStart; i < removeStart + removeCount; i++) {\n                const view = this.views[i];\n                if (view !== undefined && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            (_a = opts.direction) !== null && _a !== void 0 ? _a : (opts.direction = 'back');\n        }\n        const finalNumViews = this.views.length + ((_b = insertViews === null || insertViews === void 0 ? void 0 : insertViews.length) !== null && _b !== void 0 ? _b : 0) - (removeCount !== null && removeCount !== void 0 ? removeCount : 0);\n        assert(finalNumViews >= 0, 'final balance can not be negative');\n        if (finalNumViews === 0) {\n            console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // Insert the new views in the stack.\n        if (insertViews) {\n            // add the views to the\n            let insertIndex = ti.insertStart;\n            for (const view of insertViews) {\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                (_c = opts.direction) !== null && _c !== void 0 ? _c : (opts.direction = 'forward');\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (const view of destroyQueue) {\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (const view of destroyQueue) {\n                this.destroyView(view);\n            }\n        }\n    }\n    async transition(enteringView, leavingView, ti) {\n        // we should animate (duration > 0) if the pushed page is not the first one (startup)\n        // or if it is a portal (modal, actionsheet, etc.)\n        const opts = ti.opts;\n        const progressCallback = opts.progressAnimation\n            ? (ani) => {\n                /**\n                 * Because this progress callback is called asynchronously\n                 * it is possible for the gesture to start and end before\n                 * the animation is ever set. In that scenario, we should\n                 * immediately call progressEnd so that the transition promise\n                 * resolves and the gesture does not get locked up.\n                 */\n                if (ani !== undefined && !this.gestureOrAnimationInProgress) {\n                    this.gestureOrAnimationInProgress = true;\n                    ani.onFinish(() => {\n                        this.gestureOrAnimationInProgress = false;\n                    }, { oneTimeCallback: true });\n                    /**\n                     * Playing animation to beginning\n                     * with a duration of 0 prevents\n                     * any flickering when the animation\n                     * is later cleaned up.\n                     */\n                    ani.progressEnd(0, 0, 0);\n                }\n                else {\n                    this.sbAni = ani;\n                }\n            }\n            : undefined;\n        const mode = getIonMode(this);\n        const enteringEl = enteringView.element;\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        const leavingEl = leavingView && leavingView.element;\n        const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n            leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\n        const { hasCompleted } = await transition(animationOpts);\n        return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n    }\n    transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n        /**\n         * If the transition did not complete, the leavingView will still be the active\n         * view on the stack. Otherwise unmount all the views after the enteringView.\n         */\n        const activeView = hasCompleted ? enteringView : leavingView;\n        if (activeView) {\n            this.unmountInactiveViews(activeView);\n        }\n        return {\n            hasCompleted,\n            requiresTransition: true,\n            enteringView,\n            leavingView,\n            direction: opts.direction,\n        };\n    }\n    /**\n     * Inserts a view at the specified index.\n     *\n     * When the view already is in the stack it will be moved to the new position.\n     *\n     * @param view The view to insert.\n     * @param index The index where to insert the view.\n     */\n    insertViewAt(view, index) {\n        const views = this.views;\n        const existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            assert(view.nav === this, 'view is not part of the nav');\n            // The view already in the stack, removes it.\n            views.splice(existingIndex, 1);\n            // and add it back at the requested index.\n            views.splice(index, 0, view);\n        }\n        else {\n            assert(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            views.splice(index, 0, view);\n        }\n    }\n    /**\n     * Removes a view from the stack.\n     *\n     * @param view The view to remove.\n     */\n    removeView(view) {\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        const views = this.views;\n        const index = views.indexOf(view);\n        assert(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    }\n    destroyView(view) {\n        view._destroy();\n        this.removeView(view);\n    }\n    /**\n     * Unmounts all inactive views after the specified active view.\n     *\n     * DOM WRITE\n     *\n     * @param activeView The view that is actively visible in the stack. Used to calculate which views to unmount.\n     */\n    unmountInactiveViews(activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        const views = this.views;\n        const activeViewIndex = views.indexOf(activeView);\n        for (let i = views.length - 1; i >= 0; i--) {\n            const view = views[i];\n            /**\n             * When inserting multiple views via insertPages\n             * the last page will be transitioned to, but the\n             * others will not be. As a result, a DOM element\n             * will only be created for the last page inserted.\n             * As a result, it is possible to have views in the\n             * stack that do not have `view.element` yet.\n             */\n            const element = view.element;\n            if (element) {\n                if (i > activeViewIndex) {\n                    // this view comes after the active view\n                    // let's unload it\n                    lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n                    this.destroyView(view);\n                }\n                else if (i < activeViewIndex) {\n                    // this view comes before the active view\n                    // and it is not a portal then ensure it is hidden\n                    setPageHidden(element, true);\n                }\n            }\n        }\n    }\n    canStart() {\n        return (!this.gestureOrAnimationInProgress &&\n            !!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.canGoBackSync());\n    }\n    onStart() {\n        this.gestureOrAnimationInProgress = true;\n        this.pop({ direction: 'back', progressAnimation: true });\n    }\n    onMove(stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    }\n    onEnd(shouldComplete, stepValue, dur) {\n        if (this.sbAni) {\n            this.sbAni.onFinish(() => {\n                this.gestureOrAnimationInProgress = false;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            let newStepValue = shouldComplete ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n            }\n            else {\n                newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n            }\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n        }\n        else {\n            this.gestureOrAnimationInProgress = false;\n        }\n    }\n    render() {\n        return h(\"slot\", { key: '6894eccc60e446294b01261477691ea1e88348ab' });\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"swipeGesture\": [\"swipeGestureChanged\"],\n        \"root\": [\"rootChanged\"]\n    }; }\n};\nNav.style = IonNavStyle0;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n    const nav = el.closest('ion-nav');\n    if (nav) {\n        if (routerDirection === 'forward') {\n            if (component !== undefined) {\n                return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'root') {\n            if (component !== undefined) {\n                return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'back') {\n            return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n        }\n    }\n    return Promise.resolve(false);\n};\n\nconst NavLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.onClick = () => {\n            return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n        };\n        this.component = undefined;\n        this.componentProps = undefined;\n        this.routerDirection = 'forward';\n        this.routerAnimation = undefined;\n    }\n    render() {\n        return h(Host, { key: 'dab6e8a908395d99c87452c5e5aa4e61d9e72435', onClick: this.onClick });\n    }\n    get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"],"names":["r","registerInstance","d","createEvent","h","f","getElement","H","Host","g","getTimeGivenProgression","o","assert","s","shallowEqualStringMap","l","lifecycle","t","transition","setPageHidden","LIFECYCLE_WILL_UNLOAD","b","LIFECYCLE_WILL_LEAVE","c","LIFECYCLE_DID_LEAVE","getIonMode","config","a","attachComponent","VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","constructor","component","params","state","init","container","element","delegate","_destroy","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","IonNavStyle0","Nav","hostRef","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","gestureOrAnimationInProgress","useRouter","isTransitioning","destroyed","views","didLoad","swipeGesture","animated","animation","rootParams","root","swipeGestureChanged","gesture","enable","rootChanged","setRoot","componentWillLoad","document","querySelector","el","closest","mode","getBoolean","emit","componentDidLoad","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","connectedCallback","disconnectedCallback","destroy","length","push","opts","done","insert","insertIndex","insertPages","insertComponents","queueTrns","insertStart","insertViews","pop","removeIndex","popTo","indexOrViewCtrl","ti","removeStart","removeCount","removeView","popToRoot","startIndex","setPages","setRouteId","direction","active","getActiveSync","Promise","resolve","changed","promise","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","Object","assign","animationBuilder","getRouteId","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","_a","_b","skipIfBusy","reject","router","canTransition","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","_c","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalNumViews","console","warn","insertViewAt","destroyView","progressCallback","progressAnimation","ani","onFinish","oneTimeCallback","progressEnd","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","activeView","unmountInactiveViews","existingIndex","splice","activeViewIndex","stepValue","progressStep","shouldComplete","dur","newStepValue","easing","render","key","watchers","style","navLink","routerDirection","routerAnimation","NavLink","onClick","ion_nav","ion_nav_link"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}