{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, w as writeTask, e as readTask, h, f as getElement, H as Host } from './index-a1a47f01.js';\nimport { f as findClosestIonContent, p as printIonContentErrorMsg, g as getScrollElement } from './index-f3946ac1.js';\nimport { b as getIonMode, c as config } from './ionic-global-94f25d1b.js';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config-49c88215.js';\nimport './helpers-be245865.js';\nimport './index-9b0d46f4.js';\n\nconst infiniteScrollCss = \"ion-infinite-scroll{display:none;width:100%}.infinite-scroll-enabled{display:block}\";\nconst IonInfiniteScrollStyle0 = infiniteScrollCss;\n\nconst InfiniteScroll = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionInfinite = createEvent(this, \"ionInfinite\", 7);\n        this.thrPx = 0;\n        this.thrPc = 0;\n        /**\n         * didFire exists so that ionInfinite\n         * does not fire multiple times if\n         * users continue to scroll after\n         * scrolling into the infinite\n         * scroll threshold.\n         */\n        this.didFire = false;\n        this.isBusy = false;\n        this.onScroll = () => {\n            const scrollEl = this.scrollEl;\n            if (!scrollEl || !this.canStart()) {\n                return 1;\n            }\n            const infiniteHeight = this.el.offsetHeight;\n            if (infiniteHeight === 0) {\n                // if there is no height of this element then do nothing\n                return 2;\n            }\n            const scrollTop = scrollEl.scrollTop;\n            const scrollHeight = scrollEl.scrollHeight;\n            const height = scrollEl.offsetHeight;\n            const threshold = this.thrPc !== 0 ? height * this.thrPc : this.thrPx;\n            const distanceFromInfinite = this.position === 'bottom'\n                ? scrollHeight - infiniteHeight - scrollTop - threshold - height\n                : scrollTop - infiniteHeight - threshold;\n            if (distanceFromInfinite < 0) {\n                if (!this.didFire) {\n                    this.isLoading = true;\n                    this.didFire = true;\n                    this.ionInfinite.emit();\n                    return 3;\n                }\n            }\n            return 4;\n        };\n        this.isLoading = false;\n        this.threshold = '15%';\n        this.disabled = false;\n        this.position = 'bottom';\n    }\n    thresholdChanged() {\n        const val = this.threshold;\n        if (val.lastIndexOf('%') > -1) {\n            this.thrPx = 0;\n            this.thrPc = parseFloat(val) / 100;\n        }\n        else {\n            this.thrPx = parseFloat(val);\n            this.thrPc = 0;\n        }\n    }\n    disabledChanged() {\n        const disabled = this.disabled;\n        if (disabled) {\n            this.isLoading = false;\n            this.isBusy = false;\n        }\n        this.enableScrollEvents(!disabled);\n    }\n    async connectedCallback() {\n        const contentEl = findClosestIonContent(this.el);\n        if (!contentEl) {\n            printIonContentErrorMsg(this.el);\n            return;\n        }\n        this.scrollEl = await getScrollElement(contentEl);\n        this.thresholdChanged();\n        this.disabledChanged();\n        if (this.position === 'top') {\n            writeTask(() => {\n                if (this.scrollEl) {\n                    this.scrollEl.scrollTop = this.scrollEl.scrollHeight - this.scrollEl.clientHeight;\n                }\n            });\n        }\n    }\n    disconnectedCallback() {\n        this.enableScrollEvents(false);\n        this.scrollEl = undefined;\n    }\n    /**\n     * Call `complete()` within the `ionInfinite` output event handler when\n     * your async operation has completed. For example, the `loading`\n     * state is while the app is performing an asynchronous operation,\n     * such as receiving more data from an AJAX request to add more items\n     * to a data list. Once the data has been received and UI updated, you\n     * then call this method to signify that the loading has completed.\n     * This method will change the infinite scroll's state from `loading`\n     * to `enabled`.\n     */\n    async complete() {\n        const scrollEl = this.scrollEl;\n        if (!this.isLoading || !scrollEl) {\n            return;\n        }\n        this.isLoading = false;\n        if (this.position === 'top') {\n            /**\n             * New content is being added at the top, but the scrollTop position stays the same,\n             * which causes a scroll jump visually. This algorithm makes sure to prevent this.\n             * (Frame 1)\n             *    - complete() is called, but the UI hasn't had time to update yet.\n             *    - Save the current content dimensions.\n             *    - Wait for the next frame using _dom.read, so the UI will be updated.\n             * (Frame 2)\n             *    - Read the new content dimensions.\n             *    - Calculate the height difference and the new scroll position.\n             *    - Delay the scroll position change until other possible dom reads are done using _dom.write to be performant.\n             * (Still frame 2, if I'm correct)\n             *    - Change the scroll position (= visually maintain the scroll position).\n             *    - Change the state to re-enable the InfiniteScroll.\n             *    - This should be after changing the scroll position, or it could\n             *    cause the InfiniteScroll to be triggered again immediately.\n             * (Frame 3)\n             *    Done.\n             */\n            this.isBusy = true;\n            // ******** DOM READ ****************\n            // Save the current content dimensions before the UI updates\n            const prev = scrollEl.scrollHeight - scrollEl.scrollTop;\n            // ******** DOM READ ****************\n            requestAnimationFrame(() => {\n                readTask(() => {\n                    // UI has updated, save the new content dimensions\n                    const scrollHeight = scrollEl.scrollHeight;\n                    // New content was added on top, so the scroll position should be changed immediately to prevent it from jumping around\n                    const newScrollTop = scrollHeight - prev;\n                    // ******** DOM WRITE ****************\n                    requestAnimationFrame(() => {\n                        writeTask(() => {\n                            scrollEl.scrollTop = newScrollTop;\n                            this.isBusy = false;\n                            this.didFire = false;\n                        });\n                    });\n                });\n            });\n        }\n        else {\n            this.didFire = false;\n        }\n    }\n    canStart() {\n        return !this.disabled && !this.isBusy && !!this.scrollEl && !this.isLoading;\n    }\n    enableScrollEvents(shouldListen) {\n        if (this.scrollEl) {\n            if (shouldListen) {\n                this.scrollEl.addEventListener('scroll', this.onScroll);\n            }\n            else {\n                this.scrollEl.removeEventListener('scroll', this.onScroll);\n            }\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        const disabled = this.disabled;\n        return (h(Host, { key: 'c2248d06232dd7771dd155693ec75f9258dc969e', class: {\n                [mode]: true,\n                'infinite-scroll-loading': this.isLoading,\n                'infinite-scroll-enabled': !disabled,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"threshold\": [\"thresholdChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nInfiniteScroll.style = IonInfiniteScrollStyle0;\n\nconst infiniteScrollContentIosCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px;margin-top:4px;margin-bottom:0}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-ios .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\nconst IonInfiniteScrollContentIosStyle0 = infiniteScrollContentIosCss;\n\nconst infiniteScrollContentMdCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px;margin-top:4px;margin-bottom:0}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\nconst IonInfiniteScrollContentMdStyle0 = infiniteScrollContentMdCss;\n\nconst InfiniteScrollContent = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n        this.loadingSpinner = undefined;\n        this.loadingText = undefined;\n    }\n    componentDidLoad() {\n        if (this.loadingSpinner === undefined) {\n            const mode = getIonMode(this);\n            this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n        }\n    }\n    renderLoadingText() {\n        const { customHTMLEnabled, loadingText } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { class: \"infinite-loading-text\", innerHTML: sanitizeDOMString(loadingText) });\n        }\n        return h(\"div\", { class: \"infinite-loading-text\" }, this.loadingText);\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '2f4afb07bcfe3e12528eb9cee8646a097e0b359f', class: {\n                [mode]: true,\n                // Used internally for styling\n                [`infinite-scroll-content-${mode}`]: true,\n            } }, h(\"div\", { key: 'af038177bf10c88c8970682487a4328689aaa5f2', class: \"infinite-loading\" }, this.loadingSpinner && (h(\"div\", { key: '1da5d419bc6a978b6a509fdab47dae347fc8d221', class: \"infinite-loading-spinner\" }, h(\"ion-spinner\", { key: '60cc5c64e0a317ac0005d5afe42c4bb8da58136f', name: this.loadingSpinner }))), this.loadingText !== undefined && this.renderLoadingText())));\n    }\n};\nInfiniteScrollContent.style = {\n    ios: IonInfiniteScrollContentIosStyle0,\n    md: IonInfiniteScrollContentMdStyle0\n};\n\nexport { InfiniteScroll as ion_infinite_scroll, InfiniteScrollContent as ion_infinite_scroll_content };\n"],"names":["r","registerInstance","d","createEvent","w","writeTask","e","readTask","h","f","getElement","H","Host","findClosestIonContent","p","printIonContentErrorMsg","g","getScrollElement","b","getIonMode","c","config","E","ENABLE_HTML_CONTENT_DEFAULT","a","sanitizeDOMString","infiniteScrollCss","IonInfiniteScrollStyle0","InfiniteScroll","constructor","hostRef","ionInfinite","thrPx","thrPc","didFire","isBusy","onScroll","scrollEl","canStart","infiniteHeight","el","offsetHeight","scrollTop","scrollHeight","height","threshold","distanceFromInfinite","position","isLoading","emit","disabled","thresholdChanged","val","lastIndexOf","parseFloat","disabledChanged","enableScrollEvents","connectedCallback","contentEl","clientHeight","disconnectedCallback","undefined","complete","prev","requestAnimationFrame","newScrollTop","shouldListen","addEventListener","removeEventListener","render","mode","key","class","watchers","style","infiniteScrollContentIosCss","IonInfiniteScrollContentIosStyle0","infiniteScrollContentMdCss","IonInfiniteScrollContentMdStyle0","InfiniteScrollContent","customHTMLEnabled","get","loadingSpinner","loadingText","componentDidLoad","renderLoadingText","innerHTML","name","ios","md","ion_infinite_scroll","ion_infinite_scroll_content"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}