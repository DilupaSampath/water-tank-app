{"version":3,"file":"node_modules_stencil_core_internal_client_shadow-css_js.js","mappings":"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","sources":["./node_modules/@stencil/core/internal/client/shadow-css.js"],"sourcesContent":["// src/utils/regular-expression.ts\nvar escapeRegExpSpecialCharacters = (text) => {\n  return text.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n};\n\n// src/utils/shadow-css.ts\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from `webcomponents.js` to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = (selector) => {\n  const placeholders = [];\n  let index = 0;\n  selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n    const replaceBy = `__ph-${index}__`;\n    placeholders.push(keep);\n    index++;\n    return replaceBy;\n  });\n  const content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n    const replaceBy = `__ph-${index}__`;\n    placeholders.push(exp);\n    index++;\n    return pseudo + replaceBy;\n  });\n  const ss = {\n    content,\n    placeholders\n  };\n  return ss;\n};\nvar restoreSafeSelector = (placeholders, content) => {\n  return content.replace(/__ph-(\\d+)__/g, (_, index) => placeholders[+index]);\n};\nvar _polyfillHost = \"-shadowcsshost\";\nvar _polyfillSlotted = \"-shadowcssslotted\";\nvar _polyfillHostContext = \"-shadowcsscontext\";\nvar _parenSuffix = \")(?:\\\\(((?:\\\\([^)(]*\\\\)|[^)(]*)+?)\\\\))?([^,{]*)\";\nvar _cssColonHostRe = new RegExp(\"(\" + _polyfillHost + _parenSuffix, \"gim\");\nvar _cssColonHostContextRe = new RegExp(\"(\" + _polyfillHostContext + _parenSuffix, \"gim\");\nvar _cssColonSlottedRe = new RegExp(\"(\" + _polyfillSlotted + _parenSuffix, \"gim\");\nvar _polyfillHostNoCombinator = _polyfillHost + \"-no-combinator\";\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = \"([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$\";\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar createSupportsRuleRe = (selector) => new RegExp(`((?<!(^@supports(.*)))|(?<={.*))(${selector}\\\\b)`, \"gim\");\nvar _colonSlottedRe = createSupportsRuleRe(\"::slotted\");\nvar _colonHostRe = createSupportsRuleRe(\":host\");\nvar _colonHostContextRe = createSupportsRuleRe(\":host-context\");\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = (input) => {\n  return input.replace(_commentRe, \"\");\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = (input) => {\n  return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar _selectorPartsRe = /(^.*?[^\\\\])??((:+)(.*)|$)/;\nvar OPEN_CURLY = \"{\";\nvar CLOSE_CURLY = \"}\";\nvar BLOCK_PLACEHOLDER = \"%BLOCK%\";\nvar processRules = (input, ruleCallback) => {\n  const inputWithEscapedBlocks = escapeBlocks(input);\n  let nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, (...m) => {\n    const selector = m[2];\n    let content = \"\";\n    let suffix = m[4];\n    let contentPrefix = \"\";\n    if (suffix && suffix.startsWith(\"{\" + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = \"{\";\n    }\n    const cssRule = {\n      selector,\n      content\n    };\n    const rule = ruleCallback(cssRule);\n    return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n  });\n};\nvar escapeBlocks = (input) => {\n  const inputParts = input.split(_curlyRe);\n  const resultParts = [];\n  const escapedBlocks = [];\n  let bracketCount = 0;\n  let currentBlockParts = [];\n  for (let partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    const part = inputParts[partIndex];\n    if (part === CLOSE_CURLY) {\n      bracketCount--;\n    }\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(\"\"));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n      resultParts.push(part);\n    }\n    if (part === OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(\"\"));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n  const strEscapedBlocks = {\n    escapedString: resultParts.join(\"\"),\n    blocks: escapedBlocks\n  };\n  return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = (cssText) => {\n  cssText = cssText.replace(_colonHostContextRe, `$1${_polyfillHostContext}`).replace(_colonHostRe, `$1${_polyfillHost}`).replace(_colonSlottedRe, `$1${_polyfillSlotted}`);\n  return cssText;\n};\nvar convertColonRule = (cssText, regExp, partReplacer) => {\n  return cssText.replace(regExp, (...m) => {\n    if (m[2]) {\n      const parts = m[2].split(\",\");\n      const r = [];\n      for (let i = 0; i < parts.length; i++) {\n        const p = parts[i].trim();\n        if (!p) break;\n        r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n      }\n      return r.join(\",\");\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n};\nvar colonHostPartReplacer = (host, part, suffix) => {\n  return host + part.replace(_polyfillHost, \"\") + suffix;\n};\nvar convertColonHost = (cssText) => {\n  return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = (host, part, suffix) => {\n  if (part.indexOf(_polyfillHost) > -1) {\n    return colonHostPartReplacer(host, part, suffix);\n  } else {\n    return host + part + suffix + \", \" + part + \" \" + host + suffix;\n  }\n};\nvar convertColonSlotted = (cssText, slotScopeId) => {\n  const slotClass = \".\" + slotScopeId + \" > \";\n  const selectors = [];\n  cssText = cssText.replace(_cssColonSlottedRe, (...m) => {\n    if (m[2]) {\n      const compound = m[2].trim();\n      const suffix = m[3];\n      const slottedSelector = slotClass + compound + suffix;\n      let prefixSelector = \"\";\n      for (let i = m[4] - 1; i >= 0; i--) {\n        const char = m[5][i];\n        if (char === \"}\" || char === \",\") {\n          break;\n        }\n        prefixSelector = char + prefixSelector;\n      }\n      const orgSelector = (prefixSelector + slottedSelector).trim();\n      const addedSelector = `${prefixSelector.trimEnd()}${slottedSelector.trim()}`.trim();\n      if (orgSelector !== addedSelector) {\n        const updatedSelector = `${addedSelector}, ${orgSelector}`;\n        selectors.push({\n          orgSelector,\n          updatedSelector\n        });\n      }\n      return slottedSelector;\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n  return {\n    selectors,\n    cssText\n  };\n};\nvar convertColonHostContext = (cssText) => {\n  return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = (cssText) => {\n  return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, \" \"), cssText);\n};\nvar makeScopeMatcher = (scopeSelector2) => {\n  const lre = /\\[/g;\n  const rre = /\\]/g;\n  scopeSelector2 = scopeSelector2.replace(lre, \"\\\\[\").replace(rre, \"\\\\]\");\n  return new RegExp(\"^(\" + scopeSelector2 + \")\" + _selectorReSuffix, \"m\");\n};\nvar selectorNeedsScoping = (selector, scopeSelector2) => {\n  const re = makeScopeMatcher(scopeSelector2);\n  return !re.test(selector);\n};\nvar injectScopingSelector = (selector, scopingSelector) => {\n  return selector.replace(_selectorPartsRe, (_, before = \"\", _colonGroup, colon = \"\", after = \"\") => {\n    return before + scopingSelector + colon + after;\n  });\n};\nvar applySimpleSelectorScope = (selector, scopeSelector2, hostSelector) => {\n  _polyfillHostRe.lastIndex = 0;\n  if (_polyfillHostRe.test(selector)) {\n    const replaceBy = `.${hostSelector}`;\n    return selector.replace(_polyfillHostNoCombinatorRe, (_, selector2) => injectScopingSelector(selector2, replaceBy)).replace(_polyfillHostRe, replaceBy + \" \");\n  }\n  return scopeSelector2 + \" \" + selector;\n};\nvar applyStrictSelectorScope = (selector, scopeSelector2, hostSelector) => {\n  const isRe = /\\[is=([^\\]]*)\\]/g;\n  scopeSelector2 = scopeSelector2.replace(isRe, (_, ...parts) => parts[0]);\n  const className = \".\" + scopeSelector2;\n  const _scopeSelectorPart = (p) => {\n    let scopedP = p.trim();\n    if (!scopedP) {\n      return \"\";\n    }\n    if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n      scopedP = applySimpleSelectorScope(p, scopeSelector2, hostSelector);\n    } else {\n      const t = p.replace(_polyfillHostRe, \"\");\n      if (t.length > 0) {\n        scopedP = injectScopingSelector(t, className);\n      }\n    }\n    return scopedP;\n  };\n  const safeContent = safeSelector(selector);\n  selector = safeContent.content;\n  let scopedSelector = \"\";\n  let startIndex = 0;\n  let res;\n  const sep = /( |>|\\+|~(?!=))\\s*/g;\n  const hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n  let shouldScope = !hasHost;\n  while ((res = sep.exec(selector)) !== null) {\n    const separator = res[1];\n    const part2 = selector.slice(startIndex, res.index).trim();\n    shouldScope = shouldScope || part2.indexOf(_polyfillHostNoCombinator) > -1;\n    const scopedPart = shouldScope ? _scopeSelectorPart(part2) : part2;\n    scopedSelector += `${scopedPart} ${separator} `;\n    startIndex = sep.lastIndex;\n  }\n  const part = selector.substring(startIndex);\n  shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n  scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n  return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = (selector, scopeSelectorText, hostSelector, slotSelector) => {\n  return selector.split(\",\").map((shallowPart) => {\n    if (slotSelector && shallowPart.indexOf(\".\" + slotSelector) > -1) {\n      return shallowPart.trim();\n    }\n    if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n      return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n    } else {\n      return shallowPart.trim();\n    }\n  }).join(\", \");\n};\nvar scopeSelectors = (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) => {\n  return processRules(cssText, (rule) => {\n    let selector = rule.selector;\n    let content = rule.content;\n    if (rule.selector[0] !== \"@\") {\n      selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n    } else if (rule.selector.startsWith(\"@media\") || rule.selector.startsWith(\"@supports\") || rule.selector.startsWith(\"@page\") || rule.selector.startsWith(\"@document\")) {\n      content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector);\n    }\n    const cssRule = {\n      selector: selector.replace(/\\s{2,}/g, \" \").trim(),\n      content\n    };\n    return cssRule;\n  });\n};\nvar scopeCssText = (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) => {\n  cssText = insertPolyfillHostInCssText(cssText);\n  cssText = convertColonHost(cssText);\n  cssText = convertColonHostContext(cssText);\n  const slotted = convertColonSlotted(cssText, slotScopeId);\n  cssText = slotted.cssText;\n  cssText = convertShadowDOMSelectors(cssText);\n  if (scopeId) {\n    cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\n  }\n  cssText = replaceShadowCssHost(cssText, hostScopeId);\n  cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, \" $1 \");\n  return {\n    cssText: cssText.trim(),\n    // We need to replace the shadow CSS host string in each of these selectors since we created\n    // them prior to the replacement happening in the components CSS text.\n    slottedSelectors: slotted.selectors.map((ref) => ({\n      orgSelector: replaceShadowCssHost(ref.orgSelector, hostScopeId),\n      updatedSelector: replaceShadowCssHost(ref.updatedSelector, hostScopeId)\n    }))\n  };\n};\nvar replaceShadowCssHost = (cssText, hostScopeId) => {\n  return cssText.replace(/-shadowcsshost-no-combinator/g, `.${hostScopeId}`);\n};\nvar scopeCss = (cssText, scopeId, commentOriginalSelector) => {\n  const hostScopeId = scopeId + \"-h\";\n  const slotScopeId = scopeId + \"-s\";\n  const commentsWithHash = extractCommentsWithHash(cssText);\n  cssText = stripComments(cssText);\n  const orgSelectors = [];\n  if (commentOriginalSelector) {\n    const processCommentedSelector = (rule) => {\n      const placeholder = `/*!@___${orgSelectors.length}___*/`;\n      const comment = `/*!@${rule.selector}*/`;\n      orgSelectors.push({ placeholder, comment });\n      rule.selector = placeholder + rule.selector;\n      return rule;\n    };\n    cssText = processRules(cssText, (rule) => {\n      if (rule.selector[0] !== \"@\") {\n        return processCommentedSelector(rule);\n      } else if (rule.selector.startsWith(\"@media\") || rule.selector.startsWith(\"@supports\") || rule.selector.startsWith(\"@page\") || rule.selector.startsWith(\"@document\")) {\n        rule.content = processRules(rule.content, processCommentedSelector);\n        return rule;\n      }\n      return rule;\n    });\n  }\n  const scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\n  cssText = [scoped.cssText, ...commentsWithHash].join(\"\\n\");\n  if (commentOriginalSelector) {\n    orgSelectors.forEach(({ placeholder, comment }) => {\n      cssText = cssText.replace(placeholder, comment);\n    });\n  }\n  scoped.slottedSelectors.forEach((slottedSelector) => {\n    const regex = new RegExp(escapeRegExpSpecialCharacters(slottedSelector.orgSelector), \"g\");\n    cssText = cssText.replace(regex, slottedSelector.updatedSelector);\n  });\n  return cssText;\n};\nexport {\n  scopeCss\n};\n"],"names":["escapeRegExpSpecialCharacters","text","replace","safeSelector","selector","placeholders","index","_","keep","replaceBy","push","content","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","createSupportsRuleRe","_colonSlottedRe","_colonHostRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","match","_ruleRe","_curlyRe","_selectorPartsRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","m","suffix","contentPrefix","startsWith","blocks","substring","length","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","strEscapedBlocks","insertPolyfillHostInCssText","cssText","convertColonRule","regExp","partReplacer","parts","r","i","p","trim","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","indexOf","convertColonSlotted","slotScopeId","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimEnd","updatedSelector","convertColonHostContext","convertShadowDOMSelectors","reduce","result","pattern","makeScopeMatcher","scopeSelector2","lre","rre","selectorNeedsScoping","re","test","injectScopingSelector","scopingSelector","before","_colonGroup","colon","after","applySimpleSelectorScope","hostSelector","lastIndex","selector2","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","safeContent","scopedSelector","startIndex","res","sep","hasHost","shouldScope","exec","separator","part2","slice","scopedPart","scopeSelector","scopeSelectorText","slotSelector","map","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotted","replaceShadowCssHost","slottedSelectors","ref","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector","placeholder","comment","scoped","forEach","regex"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}